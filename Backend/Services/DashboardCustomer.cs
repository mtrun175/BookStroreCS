using System;
using System.Data;
using MySql.Data.MySqlClient;
using Spectre.Console;

namespace BookStoreConsoleApp.Services
{
    public static class DashboardCustomer
    {
        public static void ManageCustomers(string connectionString)
        {
            while (true)
            {
                Console.Clear();
                var title = new FigletText("Customer Manager").Centered().Color(Color.Green);
                AnsiConsole.Write(title);

                AnsiConsole.MarkupLine("[yellow]1. Xem t·∫•t c·∫£ kh√°ch h√†ng[/]");
                AnsiConsole.MarkupLine("[yellow]2. T√¨m ki·∫øm kh√°ch h√†ng[/]");
                AnsiConsole.MarkupLine("[yellow]3. Kh√≥a/M·ªü kh√≥a t√†i kho·∫£n[/]");
                AnsiConsole.MarkupLine("[yellow]4. Quay l·∫°i[/]");

                Console.Write("üîé Ch·ªçn ch·ª©c nƒÉng: ");
                var input = Console.ReadLine();

                switch (input)
                {
                    case "1":
                        DisplayAllCustomers(connectionString);
                        break;
                    case "2":
                        SearchCustomer(connectionString);
                        break;
                    case "3":
                        ToggleCustomerStatus(connectionString);
                        break;
                    case "4":
                        return;
                    default:
                        AnsiConsole.MarkupLine("[red]‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá![/]");
                        Thread.Sleep(1500);
                        break;
                }
            }
        }

        private static void DisplayAllCustomers(string connectionString)
        {
            Console.Clear();
            AnsiConsole.MarkupLine("[bold underline green]Danh s√°ch kh√°ch h√†ng:[/]");

            using var connection = new MySqlConnection(connectionString);
            connection.Open();

            string query = @"
                SELECT 
                    c.CustomerID, c.FullName, c.Email, c.PhoneNumber, c.Address, c.Status, c.created_at,
                    COUNT(o.OrderID) AS TotalOrders,
                    SUM(CASE WHEN o.Status = 0 THEN 1 ELSE 0 END) AS CancelledOrders
                FROM customers c
                LEFT JOIN orders o ON c.CustomerID = o.CustomerID
                GROUP BY c.CustomerID";

            using var cmd = new MySqlCommand(query, connection);
            using var reader = cmd.ExecuteReader();

            var table = new Table();
            table.AddColumns("ID", "H·ªç t√™n", "Email", "SƒêT", "ƒê·ªãa ch·ªâ", "Tr·∫°ng th√°i", "T·ªïng ƒë∆°n", "ƒê√£ h·ªßy", "Ng√†y t·∫°o");

            if (!reader.HasRows)
            {
                AnsiConsole.MarkupLine("[red]‚ùå Kh√¥ng c√≥ kh√°ch h√†ng n√†o trong h·ªá th·ªëng.[/]");
            }

            while (reader.Read())
            {
                table.AddRow(
                    reader["CustomerID"].ToString(),
                    reader["FullName"].ToString(),
                    reader["Email"].ToString(),
                    reader["PhoneNumber"].ToString(),
                    reader["Address"].ToString(),
                    Convert.ToInt32(reader["Status"]) == 0 ? "‚úÖ B√¨nh th∆∞·ªùng" : "‚õî B·ªã kh√≥a",
                    reader["TotalOrders"].ToString(),
                    reader["CancelledOrders"].ToString(),
                    reader["created_at"].ToString()
                );
            }

            AnsiConsole.Write(table);
            Console.WriteLine("\nNh·∫•n ph√≠m b·∫•t k·ª≥ ƒë·ªÉ quay l·∫°i...");
            Console.ReadKey();
        }

        private static void SearchCustomer(string connectionString)
        {
            Console.Write("üîç Nh·∫≠p t√™n ho·∫∑c email c·∫ßn t√¨m: ");
            string keyword = Console.ReadLine()?.Trim();

            using var connection = new MySqlConnection(connectionString);
            connection.Open();

            string query = @"
                SELECT CustomerID, FullName, Email, PhoneNumber, Address, Status 
                FROM customers 
                WHERE FullName LIKE @kw OR Email LIKE @kw";

            using var cmd = new MySqlCommand(query, connection);
            cmd.Parameters.AddWithValue("@kw", $"%{keyword}%");
            using var reader = cmd.ExecuteReader();

            var table = new Table();
            table.AddColumns("ID", "H·ªç t√™n", "Email", "SƒêT", "ƒê·ªãa ch·ªâ", "Tr·∫°ng th√°i");

            while (reader.Read())
            {
                table.AddRow(
                    reader["CustomerID"].ToString(),
                    reader["FullName"].ToString(),
                    reader["Email"].ToString(),
                    reader["PhoneNumber"].ToString(),
                    reader["Address"].ToString(),
                    Convert.ToInt32(reader["Status"]) == 0 ? "‚úÖ B√¨nh th∆∞·ªùng" : "‚õî B·ªã kh√≥a"
                );
            }

            AnsiConsole.Write(table);
            Console.WriteLine("\nNh·∫•n ph√≠m b·∫•t k·ª≥ ƒë·ªÉ quay l·∫°i...");
            Console.ReadKey();
        }

        private static void ToggleCustomerStatus(string connectionString)
        {
            Console.Write("üîß Nh·∫≠p ID kh√°ch h√†ng c·∫ßn kh√≥a/m·ªü kh√≥a: ");
            if (!int.TryParse(Console.ReadLine(), out int customerId)) return;

            using var connection = new MySqlConnection(connectionString);
            connection.Open();

            string getStatusQuery = "SELECT Status FROM customers WHERE CustomerID = @Id";
            using var checkCmd = new MySqlCommand(getStatusQuery, connection);
            checkCmd.Parameters.AddWithValue("@Id", customerId);

            var statusObj = checkCmd.ExecuteScalar();
            if (statusObj == null)
            {
                AnsiConsole.MarkupLine("[red]‚ùå Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng.[/]");
                Thread.Sleep(1500);
                return;
            }

            int currentStatus = Convert.ToInt32(statusObj);
            int newStatus = currentStatus == 0 ? 1 : 0;

            string updateQuery = "UPDATE customers SET Status = @NewStatus WHERE CustomerID = @Id";
            using var updateCmd = new MySqlCommand(updateQuery, connection);
            updateCmd.Parameters.AddWithValue("@NewStatus", newStatus);
            updateCmd.Parameters.AddWithValue("@Id", customerId);
            updateCmd.ExecuteNonQuery();

            string message = newStatus == 0 ? "‚úÖ T√†i kho·∫£n ƒë√£ ƒë∆∞·ª£c m·ªü kh√≥a (b√¨nh th∆∞·ªùng)." : "‚õî T√†i kho·∫£n ƒë√£ b·ªã kh√≥a.";
            AnsiConsole.MarkupLine($"[green]{message}[/]");
            Thread.Sleep(2000);
        }
    }
}
